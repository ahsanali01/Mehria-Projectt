@model WebApplication5.Models.NewItemsadding

@{
	

	ViewBag.Title = "addNewStocksGet";
	Layout = "~/Views/Shared/_LayoutReservationChangescreen.cshtml";
}
<button class="btn btn-group-sm glyphicon glyphicon-menu-left" onclick="location.href='@Url.Action("Index","StocksDetail")'"></button>

<h2 class="label-success" style="display:flex; justify-content:center;color:white">ADD NEW STOCKS</h2>

<br />
@using (Html.BeginForm("addNewStocksPost", "AddnewStocks"))
{
    @Html.AntiForgeryToken()

	<div class="form-horizontal ">
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="row">
			@Html.LabelFor(model => model.itemName, htmlAttributes: new { @class = "control-label col-sm-2" })
			<div class="col-lg-4">
				@Html.EditorFor(model => model.itemName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.itemName, "", new { @class = "text-danger" })
			</div>

			@Html.LabelFor(model => model.itemQuantity, htmlAttributes: new { @class = "control-label col-sm-2" })
			<div class="col-lg-4">
				@Html.EditorFor(model => model.itemQuantity, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.itemQuantity, "", new { @class = "text-danger" })
			</div>

			</div>
		<br />
		<div class="row">

			@Html.LabelFor(model => model.itemSalePrice, htmlAttributes: new { @class = "control-label col-sm-2" })
			<div class="col-lg-4">
				@Html.EditorFor(model => model.itemSalePrice, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.itemSalePrice, "", new { @class = "text-danger" })
			</div>



			@Html.LabelFor(model => model.itemPurchasePrice, htmlAttributes: new { @class = "control-label col-sm-2" })
			<div class="col-lg-4">
				@Html.EditorFor(model => model.itemPurchasePrice, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.itemPurchasePrice, "", new { @class = "text-danger" })
			</div>
</div>
		<br />
		<div class="row">


			@Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label col-sm-2" })
			<div class="col-lg-4">
				@Html.DropDownList("Categorylist", ViewData["Categorylist"]  as SelectList,"........Select Category........" ,new { @class = "form-control" } )
				@Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
			</div>



			@Html.LabelFor(model => model.unit, htmlAttributes: new { @class = "control-label col-sm-2" })
			<div class="col-lg-4">
				@Html.DropDownList("Unitlist", ViewData["Unitlist"] as SelectList, "........Select Unit........", new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.unit, "", new { @class = "text-danger" })
			</div>

			</div>
		<br />
			
				<div class="col-md-offset-9 col-md-10">
					<input type="submit" value="Submit" class="btn btn-default" />
				</div>
		
		</div>
	
}


<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

@{
	if (TempData["message"] != null)
	{
		<script type="text/javascript">
        alert(@Html.Raw(Json.Encode(TempData["message"])));
		</script>
	}
}