
@model WebApplication5.ViewModel.CustomerView.AddCustomerClass

@{
	ViewBag.Title = "CustomerInfoGet";
	Layout = "~/Views/Shared/_LayoutReservationAddnewFunction.cshtml";
}

<h2 class="label-success" style="display:flex; justify-content:center">CUSTOMER INFORMATION</h2>


@using (Html.BeginForm("CustomerInfoPost", "BookingNewRecord", FormMethod.Post))
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal form-group">
	
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })

		<div class="row">
			@Html.LabelFor(model => model.CnicNo, htmlAttributes: new { @class = "control-label col-xs-1" })
			<div class="form-group col-lg-3">


				@Html.EditorFor(model => model.CnicNo, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.CnicNo, "", new { @class = "text-danger" })

			</div>
			@Html.LabelFor(model => model.customerName, htmlAttributes: new { @class = "control-label col-xs-1" })
			<div class="form-group col-lg-3">


				@Html.EditorFor(model => model.customerName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.customerName, "", new { @class = "text-danger" })

			</div>
			@Html.LabelFor(model => model.mobileNo, htmlAttributes: new { @class = "control-label col-xs-1" })
			<div class="form-group col-lg-3">


				@Html.EditorFor(model => model.mobileNo, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.mobileNo, "", new { @class = "text-danger" })

			</div>
		</div>
		<br />
		<br />
		<br />
		<div class="row col-lg-offset-2 ">
			@Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-xs-1" })
			<div class="form-group col-lg-4 ">


				@Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })

			</div>
			@Html.LabelFor(model => model.remarks, htmlAttributes: new { @class = "control-label col-xs-1" })
			<div class="form-group col-lg-4">


				@Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })

			</div>
		</div>
		<br />
		<div class="form-group">
			<div class="col-xs-offset-4 col-lg-12">
				<input type="submit" value="Submit" class="btn btn-default" onclick="" style="width:70%; height:50px" />
			</div>
		</div>
	</div>

}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

@{
	if (TempData["message"] != null)
	{
		<script type="text/javascript">
        alert(@Html.Raw(Json.Encode(TempData["message"])));
		</script>
	}
}