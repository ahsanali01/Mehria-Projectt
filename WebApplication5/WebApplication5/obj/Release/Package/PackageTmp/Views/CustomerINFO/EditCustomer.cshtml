@model WebApplication5.Models.DB.Customer

@{
    ViewBag.Title = "EditCustomer";
    Layout = "~/Views/Shared/_LayoutReservationChangescreen.cshtml";
}
<button class="btn btn-group-sm glyphicon glyphicon-menu-left" onclick="location.href='@Url.Action("Index","ReservationEventsmain")'"></button>
<h2 class="label-danger" style="color:white; display:flex; justify-content:center">Update Customer</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

		<div class="form-group">
			<div class="col-md-10">

				@Html.HiddenFor(model => model.customerID, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.customerID, "", new { @class = "text-danger" })
			</div>
			</div>
        <div class="form-group">
           
            <div class="col-md-10">
                @Html.HiddenFor(model => model.CnicNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CnicNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Customer Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.customerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.customerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Mobile No", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mobileNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mobileNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Address", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Remarks", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
				@Html.ActionLink("Back To List", "Index", "CustomerINFO", null, new { @class = "" })
                <input type="submit" value="Save" class="btn-lg btn-success" />
				
            </div>
        </div>
    </div>
}

<div>
   
</div>
