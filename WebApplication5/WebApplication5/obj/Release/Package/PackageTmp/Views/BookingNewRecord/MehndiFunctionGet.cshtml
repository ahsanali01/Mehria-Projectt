@model WebApplication5.ViewModel.CustomerView.AddNewFunction


@using (Html.BeginForm("MyValues", "BookingNewRecord", FormMethod.Post))
{
	@Html.AntiForgeryToken()


	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	<br />
	<div class="row">

		@Html.LabelFor(model => model.bookingDate, htmlAttributes: new { @class = "control-label col-xs-1" })
		<div class="form-group col-lg-3 ">


			@Html.EditorFor(model => model.bookingDate, new { htmlAttributes = new { @class = "form-control",@Type="datetime-local" } })
			@Html.ValidationMessageFor(model => model.bookingDate, "", new { @class = "text-danger" })
		</div>



		@Html.LabelFor(model => model.functionDate, htmlAttributes: new { @class = "control-label col-xs-1" })
		<div class="form-group col-lg-3 ">


			@Html.EditorFor(model => model.functionDate, new { htmlAttributes = new { @class = "form-control"} })
			@Html.ValidationMessageFor(model => model.functionDate, "", new { @class = "text-danger" })

		</div>

		@Html.LabelFor(model => model.noofGuest, htmlAttributes: new { @class = "control-label col-xs-1" })

		<div class="form-group col-lg-3 ">


			@Html.EditorFor(model => model.noofGuest, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.noofGuest, "", new { @class = "text-danger" })
		</div>
	</div>
	<br />
	<div class="row">
		@Html.LabelFor(model => model.rateperGuest, htmlAttributes: new { @class = "control-label col-xs-1" })
		<div class="form-group col-lg-3">


			@Html.EditorFor(model => model.rateperGuest, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.rateperGuest, "", new { @class = "text-danger" })

		</div>
		
		@Html.LabelFor(model => model.AdvancePayment, htmlAttributes: new { @class = "control-label col-xs-1" })
		<div class="form-group col-lg-3">


			@Html.EditorFor(model => model.AdvancePayment, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.AdvancePayment, "", new { @class = "text-danger" })

		</div>
		@Html.LabelFor(model => model.RemainingPayment, htmlAttributes: new { @class = "control-label col-xs-1" })
		<div class="form-group col-lg-3">


			@Html.EditorFor(model => model.RemainingPayment, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.RemainingPayment, "", new { @class = "text-danger" })

		</div>
	</div>
	<br />

		<div class="row">
			@Html.LabelFor(model => model.Extras, htmlAttributes: new { @class = "control-label col-xs-1" })
			<div class="form-group col-lg-3">


				@Html.EditorFor(model => model.Extras, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Extras, "", new { @class = "text-danger" })

			</div>
		


			@Html.LabelFor(model => model.CnicNo, htmlAttributes: new { @class = "control-label col-xs-1" })
			<div class="form-group col-lg-3">


			
			
				@Html.DropDownList("CnicNo", new SelectList(ViewBag.cust, "CnicNo", "CnicNo"), "........Select CnicNO........", new { @class = "form-control" })
			
				@Html.ValidationMessageFor(model => model.CnicNo, "", new { @class = "text-danger" })

			</div>
			
			@Html.LabelFor(model => model.timeShift, htmlAttributes: new { @class = "control-label col-xs-1  " })
			<div class="form-group col-lg-3  ">

				<div class="radio-inline col-xs-offset-1">
					@Html.RadioButton("timeShift", "Night")
					@Html.ValidationMessageFor(model => model.timeShift, "Night", new { @class = "text-danger" })
				</div>

				<div class="radio-inline col-xs-offset-1">
					@Html.RadioButton("timeShift", "Day")
					@Html.ValidationMessageFor(model => model.timeShift, "Day", new { @class = "text-danger" })
				</div>



			</div>
		
		</div>
		<br />
			<div class="row">
				
				
			
				<div class="form-group col-lg-3 col-lg-offset-2">


					<ul class="nav nav-pills nav-stacked">
						<li class="dropdown">

							<div class="radio-inline ">
								@Html.RadioButton("MenuId", "1")
								@Html.ValidationMessageFor(model => model.MenuId, "Menu1", new { @class = "text-danger" })
							</div> <a class="dropdown-toggle" data-toggle="dropdown" href="#">
								MENU 1
								<span class="caret"></span>
							</a>

							<ul class="dropdown-menu">
								<li>
									<table class="table table-responsive table-bordered">
										<tr>
											<th>
												No
											</th>

											<th>
												Item Name
											</th>
										</tr>
										<tr>
											<td>1</td>
											<td><img src="~/Picture/images/chana.jpg" width="70" height="70" /></td>
											<td>Channy</td>

										</tr>
										<tr>
											<td>2</td>
											<td><img src="~/Picture/images/halwa.jpg" width="70" height="70" /></td>
											<td>Halwa</td>
										</tr>
										<tr>
											<td>3</td>
											<td><img src="~/Picture/images/Poori-1.jpg" width="70" height="70" /></td>
											<td>Puri</td>
										</tr>
										<tr>
											<td>4</td>
											<td><img src="~/Picture/images/naan.jpg" width="70" height="70" /></td>
											<td>Naan</td>
										</tr>
										<tr>
											<td>5</td>
											<td><img src="~/Picture/images/pink tea.jpg" width="70" height="70" /></td>
											<td>Pink Tea</td>
										</tr>
									</table>
								</li>

							</ul>
						</li>
					</ul>


					<ul class="nav nav-pills nav-stacked">
						<li class="dropdown">

							<div class="radio-inline ">
								@Html.RadioButton("MenuId", "4")
								@Html.ValidationMessageFor(model => model.MenuId, "Menu2", new { @class = "text-danger" })
							</div><a class="dropdown-toggle" data-toggle="dropdown" href="#">
								MENU 2
								<span class="caret"></span>
							</a>

							<ul class="dropdown-menu">
								<li>
									<table class="table table-responsive table-bordered">
										<tr>
											<th>
												No
											</th>

											<th>
												Item Name
											</th>
										</tr>
										<tr>
											<td>1</td>
											<td><img src="~/Picture/images/chckn_chany.jpg" width="70" height="70" /></td>
											<td>Chicken Channy</td>
										</tr>
										<tr>
											<td>2</td>
											<td><img src="~/Picture/images/halwa.jpg" width="70" height="70" /></td>
											<td>Halwa</td>
										</tr>
										<tr>
											<td>3</td>
											<td><img src="~/Picture/images/Poori-1.jpg" width="70" height="70" /></td>
											<td>Puri</td>
										</tr>
										<tr>
											<td>4</td>
											<td><img src="~/Picture/images/naan.jpg" width="70" height="70" /></td>
											<td>Naan</td>
										</tr>
										<tr>
											<td>5</td>
											<td><img src="~/Picture/images/pink tea.jpg" width="70" height="70" /></td>
											<td>Pink Tea</td>
										</tr>
									</table>
								</li>

							</ul>
						</li>
					</ul>


					<ul class="nav nav-pills nav-stacked">
						<li class="dropdown">

							<div class="radio-inline ">
								@Html.RadioButton("MenuId", "7")
								@Html.ValidationMessageFor(model => model.MenuId, "Menu3", new { @class = "text-danger" })
							</div><a class="dropdown-toggle" data-toggle="dropdown" href="#">
								MENU 3
								<span class="caret"></span>
							</a>

							<ul class="dropdown-menu">
								<li>
									<table class="table table-responsive table-bordered">
										<tr>
											<th>
												No
											</th>

											<th>
												Item Name
											</th>
										</tr>
										<tr>
											<td>1</td>
											<td><img src="~/Picture/images/dum keema.jpg" width="70" height="70" /></td>
											<td>Dam Qeema</td>
										</tr>
										<tr>
											<td>2</td>
											<td><img src="~/Picture/images/halwa.jpg" width="70" height="70" /></td>
											<td>Halwa</td>
										</tr>
										<tr>
											<td>3</td>
											<td><img src="~/Picture/images/Poori-1.jpg" width="70" height="70" /></td>
											<td>Puri</td>
										</tr>
										<tr>
											<td>4</td>
											<td><img src="~/Picture/images/naan.jpg" width="70" height="70" /></td>
											<td>Naan</td>
										</tr>
										<tr>
											<td>5</td>
											<td><img src="~/Picture/images/pink tea.jpg" width="70" height="70" /></td>
											<td>Pink Tea</td>
										</tr>
									</table>
								</li>

							</ul>
						</li>
					</ul>



				</div>
				<div class="col-lg-3">
					<ul class="nav nav-pills nav-stacked">
						<li class="dropdown">
							<a class="dropdown-toggle" data-toggle="dropdown" href="#">
								Additional Facilities
								<span class="caret"></span>
							</a>

							<ul class="dropdown-menu ">
								<li>
									<table class="table table-responsive table-bordered">
										<tr>
											<th>
												No
											</th>

											<th>
												Item Name
											</th>
											<th>
												Price
											</th>
										</tr>



										<tr>
											<td><label>Basic Stage</label></td>
											<td>@Html.CheckBox("BasicStage", false)</td>
											<td>@Html.EditorFor(modal => modal.stagePrice, new { htmlAttributes = new { @class = "form-control" } })</td>
										</tr>
										<tr>
											<td><label>Dj</label></td>
											<td>@Html.CheckBox("Dj", false)</td>
											<td>@Html.EditorFor(modal => modal.DjPrice, new { htmlAttributes = new { @class = "form-control" } })</td>
										</tr>
										<tr>
											<td><label>Electricity</label></td>
											<td>@Html.CheckBox("Electricity", false)</td>
											<td>@Html.EditorFor(modal => modal.electriccityPrice, new { htmlAttributes = new { @class = "form-control" } })</td>
										</tr>
										<tr>
											<td><label>Ac/Heating</label></td>
											<td>@Html.CheckBox("AcHeating", false)</td>
											<td>@Html.EditorFor(modal => modal.AcHeatingPrice, new { htmlAttributes = new { @class = "form-control" } })</td>
										</tr>

										<tr>
											<td><label>Full Hall</label></td>
											<td>@Html.CheckBox("FullHall", false)</td>
											<td>@Html.EditorFor(modal => modal.FullHallPrice, new { htmlAttributes = new { @class = "form-control" } })</td>
										</tr>




									</table>
								</li>

							</ul>
						</li>

					</ul>
				</div>
				
			
			</div>

			

			<div class="form-group">
				<div class="col-lg-offset-11">
					<input type="submit" value="Submit" class="btn btn-default" id="1stButton" />
				</div>
			</div>
			<br />
			<br />
			<br />
			<br />
			<br />
			<br />
			<br />
			<br />
}

@{
	if (TempData["message"] != null)
	{
		<script type="text/javascript">
        alert(@Html.Raw(Json.Encode(TempData["message"])));
		</script>
	}
}
@{
	<script type="text/javascript">
		$("#setvalue").click(function () {
			$("input[name*='TotalCharges']").val("ViewBag.fullTotal");
		});

		
	</script>
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
